[versions]
agp = "8.1.0"
airship = "17.1.0"
card = "5.5.1"
annotation = "1.6.0"
appcompat = "1.6.1"
assertj = "3.24.2"
braintree = "4.36.0"
cardview = "1.0.0"
compose-bom = "2023.08.00"
compose-compiler = "1.5.1"
constraintlayout = "2.1.4"
coreKtx = "1.10.1"
coroutines = "1.7.3"
dagger = "2.47"
dependencyAnalysisPlugin = "1.20.0"
firebase = "32.2.2"
flexbox = "3.0.0"
fragment = "1.6.1"
fragmentargs = "4.0.0-RC1"
glide = "4.15.1"
glideTransformations = "4.3.0"
googleServices = "4.3.15"
gson = "2.10.1"
icepick = "3.2.0"
inputMask = "6.1.0" # Cannot update to latest because we need minSdkVersion 23
jsonassert = "1.5.1"
junit = "4.13.2"
kotlin = "1.9.0"
ksp = "1.9.0-1.0.13"
ktlint = "11.5.1"
jdk = "20"
joda = "2.12.5"
leakcanary = "2.12"
lifecycle = "2.6.1"
lottie = "6.1.0"
material = "1.9.0"
mockito = "5.4.0"
newrelic = "7.0.0"
okhttp = "5.0.0-alpha.3"
okio = "3.4.0"
playServicesAuth = "20.6.0"
playServicesLocation = "21.0.1"
playServicesMaps = "18.1.0"
playServicesWallet = "19.2.0"
retrofit = "2.9.0"
robolectric = "4.10.3"
securePreferences = "0.1.7"
sortDependencies = "0.4"
streamsupport = "1.7.4"
taptargetview = "1.13.3"
versionsPlugin = "0.47.0"
zxing = "3.5.2"

[plugins]
agp = { id = "com.android.application", version.ref = "agp" }
dependencyAnalysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependencyAnalysisPlugin" }
googleServices = { id = "com.google.gms.google-services", version.ref = "googleServices" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-samWithReceiver = { id = "org.jetbrains.kotlin.plugin.sam.with.receiver", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
sortDependencies = { id = "com.squareup.sort-dependencies", version.ref = "sortDependencies" }
versionsPlugin = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }

[libraries]
agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }

androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-cardview = { module = "androidx.cardview:cardview", version.ref = "cardview" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
androidx-lifecycle-common = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "lifecycle" }
androidx-lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }

braintree-paypal = { module = "com.braintreepayments.api:paypal", version.ref = "braintree" }
braintree-venmo = { module = "com.braintreepayments.api:venmo", version.ref = "braintree" }

card = { module = "io.card:android-sdk", version.ref = "card" }

compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose.bom" }
compose-material = { module = "androidx.compose.material:material" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-ui-viewinterop = { module = "androidx.compose.ui:ui-viewbinding" }

dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase" }
firebase-config = { module = "com.google.firebase:firebase-config" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }

flexbox = { module = "com.google.android.flexbox:flexbox", version.ref = "flexbox" }
fragmentargs-annotation = { module = "com.hannesdorfmann.fragmentargs:annotation", version.ref = "fragmentargs" }
fragmentargs-processor = { module = "com.hannesdorfmann.fragmentargs:processor", version.ref = "fragmentargs" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-ksp = { module = "com.github.bumptech.glide:ksp", version.ref = "glide" }
glide-transformations = { module = "jp.wasabeef:glide-transformations", version.ref = "glideTransformations" }

gradlePlugins-dependencyAnalysis = { module = "com.autonomousapps:dependency-analysis-gradle-plugin", version.ref = "dependencyAnalysisPlugin" }
gradlePlugins-enterprise = "com.gradle:gradle-enterprise-gradle-plugin:3.14"
gradlePlugins-kgp = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradlePlugins-versions = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "versionsPlugin" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
guava = "com.google.guava:guava:32.1.1-jre"

icepick = { module = "frankiesardo:icepick", version.ref = "icepick" }
icepick-processor = { module = "frankiesardo:icepick-processor", version.ref = "icepick" }

inputMask = { module = "com.github.redmadrobot:input-mask-android", version.ref = "inputMask" }
joda = { module = "net.danlew:android.joda", version.ref = "joda" }

jsonassert = { module = "org.skyscreamer:jsonassert", version.ref = "jsonassert" }
junit = { module = "junit:junit", version.ref = "junit" }

kotlinCliUtil = "com.slack.cli:kotlin-cli-util:1.2.3"
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

leakcanary-android = { module = "com.squareup.leakcanary:leakcanary-android-startup", version.ref = "leakcanary" }

lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }
material = { module = "com.google.android.material:material", version.ref = "material" }

mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }

newrelic-agent = { module = "com.newrelic.agent.android:android-agent", version.ref = "newrelic" }
newrelic-gradlePlugin = { module = "com.newrelic.agent.android:agent-gradle-plugin", version.ref = "newrelic" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp" }
okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

play-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }
play-services-wallet = { module = "com.google.android.gms:play-services-wallet", version.ref = "playServicesWallet" }

oshi = "com.github.oshi:oshi-core:6.4.4"

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }

robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }

securePreferences = { module = "com.scottyab:secure-preferences-lib", version.ref = "securePreferences" }
streamsupport = { module = "net.sourceforge.streamsupport:streamsupport", version.ref = "streamsupport" }
taptargetview = { module = "com.getkeepsafe.taptargetview:taptargetview", version.ref = "taptargetview" }

urbanairship-automation = { module = "com.urbanairship.android:urbanairship-automation", version.ref = "airship" }
urbanairship-fcm = { module = "com.urbanairship.android:urbanairship-fcm", version.ref = "airship" }
urbanairship-message-center = { module = "com.urbanairship.android:urbanairship-message-center", version.ref = "airship" }

zxing = { module = "com.google.zxing:core", version.ref = "zxing" }
